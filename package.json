{
  "name": "ccxt-js",
  "version": "1.0.0",
  "description": "A pure JavaScript cryptocurrency trading library with support for 100+ exchanges. Forked from the excellet ccxt library.",
  "unpkg": "dist/ccxt.browser.js",
  "type": "module",
  "exports": {
    ".": {
      "import": "./js/ccxt.js",
      "require": "./dist/ccxt.cjs"
    }
  },
  "bin": {
    "ccxt": "examples/js/cli.js"
  },
  "engines": {
    "node": ">=15.0.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nibarulabs/ccxt-js.git"
  },
  "readme": "README.md",
  "scripts": {
    "instrument": "nyc instrument js/ jsInstrumented/",
    "nyc-coverage": "nyc --reporter=html --reporter=lcov --exclude='js/src/pro/**' --exclude='js/src/base/**' --exclude='js/src/test/**' --exclude='js/src/abstract/**' --exclude='js/src/static_dependencies' node jsInstrumented/src/test/test.js --requestTests --responseTests",
    "coverage-js": "npm run instrument && npm run nyc-coverage && rm -rf jsInstrumented",
    "fixTSBug": "node build/fixTSBug",
    "force-build": "npm run pre-transpile && npm run force-transpile-fast && npm run csharp && npm run post-transpile && npm run update-badges",
    "build-docs": "node jsdoc2md.js && node examples2md.js",
    "serve-docs": "docsify serve ./wiki",
    "emitAPI": "node build/generateImplicitAPI.js",
    "build": "npm run pre-transpile && npm run transpile && npm run post-transpile && npm run update-badges && npm run build-docs",
    "force-build-slow": "npm run pre-transpile && npm run force-transpile && npm run post-transpile && npm run update-badges",
    "pre-transpile": "npm run export-exchanges && npm run vss && npm run tsBuild && npm run emitAPI && npm run validate-types && npm run tsBuildExamples && npm run copy-python-files && npm run check-js-syntax && npm run bundle",
    "pre-transpile-pr": "npm run export-exchanges && npm run tsBuild && npm run emitAPI && npm run check-js-syntax",
    "post-transpile": "npm run check-python-syntax && npm run check-php-syntax",
    "test-ws": "npm run build && node run-tests --ws --useProxy",
    "test": "npm run build && npm run commonjs-test && npm run static-tests && node run-tests --useProxy",
    "fast-test": "npm run commonjs-test && node run-tests --js --useProxy",
    "commonjs-test": "node ./utils/test-commonjs.cjs",
    "package-test": "./utils/package-test.sh",
    "fast-test-ws": "node run-tests --ws --js",
    "test-base": "npm run test-js-base && npm run test-python-base && npm run test-php-base && npm run test-cs-base && npm run id-tests && npm run static-tests",
    "test-base-ws": "npm run test-js-base-ws && npm run test-python-base-ws && npm run test-php-base-ws && npm run test-cs-base-ws",
    "test-js": "npm run commonjs-test && node run-tests --js --useProxy",
    "test-js-ws": "node run-tests --ws --js --useProxy",
    "test-js-base": "node ./js/src/test/base/test.base.js",
    "test-js-base-ws": "npm run test-js-cache && npm run test-js-orderbook",
    "test-freshness": "tsx ./utils/test-freshness.ts",
    "cli.js": "node ./examples/js/cli.js",
    "export-exchanges": "node build/export-exchanges",
    "capabilities": "node ./examples/js/exchange-capabilities.js",
    "git-ignore-generated-files": "node build/git-ignore-generated-files.cjs",
    "git-unignore-generated-files": "node build/git-ignore-generated-files.cjs --unignore",
    "update-badges": "node build/update-badges",
    "update-links": "node build/update-links",
    "transpile": "npm run transpileRest && npm run transpileWs",
    "transpileRest": "node build/transpile",
    "transpileWs": "node build/transpileWS",
    "force-transpile": "npm run force-transpileRest && npm run force-transpileWs",
    "force-transpile-fast": "npm run dev-force-transpile",
    "dev-force-transpile": "npm run fast-force-transpileRest && npm run fast-force-transpileWs",
    "force-transpileRest": "node build/transpile --force",
    "fast-force-transpileRest": "node build/transpile.js --multiprocess --force",
    "force-transpileWs": "node build/transpileWS --force",
    "fast-force-transpileWs": "node build/transpileWS.js --multiprocess --force",
    "test-js-cache": "node js/src/pro/test/base/test.Cache.js",
    "test-js-orderbook": "node js/src/pro/test/base/test.OrderBook.js",
    "vss": "node build/vss",
    "lint": "eslint \"ts/src/*.ts\" \"ts/src/base/Exchange.ts\" \"ts/src/pro/*.ts\" --cache --cache-location .cache/eslintcache --cache-strategy metadata",
    "check-syntax": "npm run transpile && npm run check-js-syntax && npm run check-python-syntax && npm run check-php-syntax",
    "check-js-syntax": "node -e \"console.log(process.cwd())\" && eslint --version && npm run lint",
    "eslint": "eslint",
    "bundle": "npm run bundle-cjs && npm run bundle-browser",
    "bundle-cjs": "rollup -c rollup.config.js",
    "postinstall": "node postinstall.js",
    "validate-types": "tsx build/validate-types.ts",
    "response-js": "node js/src/test/test.js --responseTests",
    "request-js": "node js/src/test/test.js --requestTests",
    "request-tests": "npm run request-js && npm run request-py && npm run request-php && npm run request-cs",
    "response-tests": "npm run response-js && npm run response-py && npm run response-php && npm run response-cs",
    "static-tests": "npm run request-tests && npm run response-tests",
    "id-tests-js": "node js/src/test/test.js --idTests",
    "id-tests": "npm run id-tests-js && npm run id-tests-py && npm run id-tests-php && npm run id-tests-cs",
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^21.0.3",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@types/node": "^18.15.11",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "ansicolor": "1.1.81",
    "as-table": "1.0.37",
    "asciichart": "^1.5.25",
    "assert": "^2.0.0",
    "ast-transpiler": "^0.0.44",
    "docsify": "^4.11.4",
    "eslint": "8.22.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-jsdoc": "^46.9.0",
    "esmify": "^2.1.1",
    "https-proxy-agent": "^5.0.1",
    "jsdoc-to-markdown": "^8.0.0",
    "ololog": "1.1.155",
    "piscina": "^3.2.0",
    "replace-in-file": "^6.3.5",
    "rollup": "^2.70.1",
    "rollup-plugin-execute": "1.1.1",
    "terser-webpack-plugin": "^5.3.9",
    "ts-loader": "^9.4.2",
    "tsx": "^4.7.2",
    "typescript": "4.7.4",
    "webpack": "^5.76.2",
    "webpack-cli": "^5.0.1"
  },
  "author": {
    "name": "Igor Kroitor",
    "email": "igor.kroitor@gmail.com",
    "url": "https://github.com/kroitor"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nibarulabs/ccxt-js/issues"
  },
  "homepage": "https://github.io",
  "keywords": [
    "algorithmic",
    "algotrading",
    "altcoin",
    "altcoins",
    "api",
    "arbitrage",
    "real-time",
    "realtime",
    "backtest",
    "backtesting",
    "bitcoin",
    "bot",
    "btc",
    "cny",
    "coin",
    "coins",
    "crypto",
    "cryptocurrency",
    "crypto currency",
    "crypto market",
    "currency",
    "currencies",
    "darkcoin",
    "dash",
    "digital currency",
    "doge",
    "dogecoin",
    "e-commerce",
    "etc",
    "eth",
    "ether",
    "ethereum",
    "exchange",
    "exchanges",
    "eur",
    "framework",
    "invest",
    "investing",
    "investor",
    "library",
    "light",
    "litecoin",
    "ltc",
    "market",
    "market data",
    "markets",
    "merchandise",
    "merchant",
    "minimal",
    "ohlcv",
    "order",
    "orderbook",
    "order book",
    "price",
    "price data",
    "pricefeed",
    "private",
    "public",
    "ripple",
    "strategy",
    "ticker",
    "tickers",
    "toolkit",
    "trade",
    "trader",
    "trading",
    "usd",
    "volume",
    "websocket",
    "websockets",
    "web socket",
    "web sockets",
    "ws",
    "xbt",
    "xrp",
    "zec",
    "zerocoin"
  ],
  "dependencies": {
    "ws": "^8.8.1"
  }
}
